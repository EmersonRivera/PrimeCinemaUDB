<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Hide1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAAfJJREFUSEvtlEurQVEYhneuMyO3iDLwHxCZmhv7Bf4DioGBOWGgpCjKBMXQdWhk
        YEyuAylK4TtnLWtpr7O/c+rUyZl46rXL+377tfkWCV7Au+RX/H/J4XCAdDoNwWAQNBoNSJL0lEqlAr/f
        D8lkEtbrNZvAQUu63S44nU7hpi6XC+LxOBQKBUgkEuB2uwXfaDRCo9FgdxARSs7nM9hsNmGYaD6fs4TI
        crkEtVotZA0GA2y3W5Z48CxptVpCmEvOZDKBYrFIr3L0er1irlKpMJeVVKtVRYio1+vREEGn0wmeVquF
        +/1OvdPpJHhc+Xye+hJ5NCxAxPlawEWWgRMKhdDMYrEAiWwIZobDYTo8Ho9Rn2s4HNJcrVZDfY/HQ65K
        gygajdJh8siYz5XL5WhuOp2iPpXP50MN/iSj0Qj1uQaDAc21223UDwQCIK1WK9Qk4nw9iFzkQHIikQia
        2e/3j+0ql8togG/X7XZTnAdScL1eqU+Qe1z1ev3h0ddPms0mGpRDvppsNgv9fp+988ButyvmOp0Oc2Ul
        hOPxCGazWTEwm81YQuRyuYDJZBKyVquVnhs54kdlkNNPwvJhh8MBsVgMSqUSZDIZvppPWSwW+uNjoCWc
        3W4HqVQKvttAr9dL/4U3mw2bwPmx5K94l/yKF5QAfAAnZUM1bUMKTwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="ShowPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAQCAYAAADj5tSrAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAAf1JREFUOE+FVM3qeVEUpYx8ZiIlr6AYSCgDIzIxJI9A8lVMjM0xkcJbKKa8hRQz
        BhJd3/avtXP873Wuv1VL3b3WPvvYZ59jUBSFvvF0OtHz+aRfgE8vX5CLCNzvdw6ez+dXhGg2m1GlUqFg
        MEg2m40MBgNZrVYKBAKUz+dpPB6/nETX61UqABog2u12CofDtFqt2AxgYSwo6HA4qFarUbvdpkajQW63
        W6Pncjk6Ho+c+/nPuIjaHI1GNd+gerdqzOdzyYuNAJfL5V8R0Ros9JkAHg4H1oHhcEiFQoF6vd4rQrTZ
        bKQcj8fDmmjf+0z8fr9kBr1eL00mE7JYLJKG3QLNZlPScG4AWsftKpfLkgn0+Xy6cUHoAAZGT89ms6xL
        Z6ImsFwudTVBAT0NZO2XAdDTBAWMRuNXnX8zmYyuYbfbselX21qtlm48mUxy/nu6zGazZKrX66xhwj41
        sFqt6sZBk8nEuVifpwujBrhcLsm83+9ZA3AJE4kElUolejwer6h+O0UXeLrEhRHjWCwWpYTFYsHaJ7bb
        7dezAGOxGPs0DySqAth9KpXSJIRCIer3+zSdTmk0GlE8HtfokUiE1us153e73Xcc0BQRvN1uLAKDwYDS
        6TQ5nU7NorhsONhOp/NuHe6L2CiAtwwd0i0iqH6N/wf1OyWIYshXFIX+AFGc3HjqinzyAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>